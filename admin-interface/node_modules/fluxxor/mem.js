var Fluxxor = require("./index.js"),
    React = require("react");

var Store = Fluxxor.createStore({});

var Comp = React.createClass({
  mixins: [Fluxxor.FluxMixin(React), Fluxxor.StoreWatchMixin("store1", "store2", "store3", "store4", "store5")],

  getStateFromFlux: function() {
    return {};
  },

  render: function() {
    if (this.props.count < 10) {
      return React.createElement("span", null, React.createElement(Comp, {count: this.props.count + 1}));
    } else {
      return React.DOM.div();
    }
  }
});

var flux, el, str, mem, els;
els = [];

for (var i = 0; i < 100000; i++) {
  flux = new Fluxxor.Flux({
    store1: new Store(),
    store2: new Store(),
    store3: new Store(),
    store4: new Store(),
    store5: new Store()
  });
  el = React.createElement(Comp, {count: 1, flux: flux});
  // els.push(el);
  str = React.renderToString(el);
  // flux.store("store1").removeAllListeners();
  // flux.store("store2").removeAllListeners();
  // flux.store("store3").removeAllListeners();
  // flux.store("store4").removeAllListeners();
  // flux.store("store5").removeAllListeners();
  if (i % 1000 === 0) {
    global.gc();
    mem = process.memoryUsage();
    console.log(Math.floor(mem.rss / 1000000));
  }
}
